version: 2.1

orbs:
  # This uses the Orbs located at https://github.com/wordpress-mobile/circleci-orbs
  ios: wordpress-mobile/ios@1.0
  git: wordpress-mobile/git@1.0
  slack: circleci/slack@3.4.2

parameters:
  beta_build:
    type: boolean
    default: false
  release_build:
    type: boolean
    default: false

xcode_version: &xcode_version
  xcode-version: "12.5.0"

commands:
  copy_secrets:
    steps:
      - run:
          name: Copy Secrets
          command: bundle exec fastlane run configure_apply
  fix-path:
    steps:
      - run:
          name: Fix $PATH
          command: |
            # Add `/usr/local/bin` to the Xcode 11.2 image's $PATH in order to be able to use dependencies

            if [ $(echo $PATH | ruby -e "puts Kernel.gets.include?('/usr/local/bin')") != "true" ]; then
              echo 'export PATH=/usr/local/bin:$PATH' >> $BASH_ENV
              echo "Manually added `/usr/local/bin` to the $PATH:"
              echo $PATH
            fi

jobs:
  Test:
    executor:
      name: ios/default
      <<: *xcode_version
    steps:
      - git/shallow-checkout
      - fix-path
      - ios/install-dependencies:
          bundle-install: true
          pod-install: true
      - copy_secrets
      # Start: Swift Package Manager Workaround
      # Ref. https://support.circleci.com/hc/en-us/articles/360044709573-Swift-Package-Manager-fails-to-clone-from-private-Git-repositories
      - run: rm ~/.ssh/id_rsa
      - run: for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts || true
      # END: Swift Package Manager Workaround
      - ios/test:
          <<: *xcode_version
          workspace: Simplenote.xcworkspace
          scheme: Simplenote
          device: iPhone 11

  Installable Build:
    executor:
      name: ios/default
      <<: *xcode_version
    steps:
      - git/shallow-checkout
      - ios/install-dependencies:
            bundle-install: true
            pod-install: true
      - copy_secrets
      # Start: Swift Package Manager Workaround
      # Ref. https://support.circleci.com/hc/en-us/articles/360044709573-Swift-Package-Manager-fails-to-clone-from-private-Git-repositories
      - run: rm ~/.ssh/id_rsa
      - run: for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts || true
      # END: Swift Package Manager Workaround
      - run:
          name: Build
          command: "bundle exec fastlane build_and_upload_installable_build build_number:$CIRCLE_BUILD_NUM"
      - run:
          name: Prepare Artifacts
          command: |
            mkdir -p Artifacts
            mv "fastlane/comment.json" "Artifacts/comment.json"
      - store_artifacts:
          path: Artifacts
          destination: Artifacts
  Release Build:
    executor:
      name: ios/default
      <<: *xcode_version
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - git/shallow-checkout
      - ios/install-dependencies:
            bundle-install: true
            pod-install: true
      - copy_secrets
      # Start: Swift Package Manager Workaround
      # Ref. https://support.circleci.com/hc/en-us/articles/360044709573-Swift-Package-Manager-fails-to-clone-from-private-Git-repositories
      - run: rm ~/.ssh/id_rsa
      - run: for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts || true
      # END: Swift Package Manager Workaround
      - run:
          name: Install other tools
          command: |
            brew install imagemagick
            brew install ghostscript
            curl -sL https://sentry.io/get-cli/ | bash
      - run:
          name: Setup Slack notifications
          command: |
            APP_VERSION=$(cat ./config/Version.Public.xcconfig | grep "^VERSION_LONG" | cut -d "=" -f2)
            echo "export SLACK_FAILURE_MESSAGE=':red_circle: Build for Simplenote $APP_VERSION failed!'" >> $BASH_ENV
            echo "export SLACK_SUCCESS_MESSAGE=':tada: Simplenote $APP_VERSION has been deployed!'" >> $BASH_ENV
      - when:
          condition: << pipeline.parameters.beta_build >>
          steps:
            - run:
                name: Build
                command: |
                  bundle exec fastlane build_and_upload_beta_release skip_confirm:true create_gh_release:true
                no_output_timeout: 60m
      - when:
          condition: << pipeline.parameters.release_build >>
          steps:
            - run:
                name: Build
                command: |
                  bundle exec fastlane build_and_upload_stable_release skip_confirm:true create_gh_release:true
                no_output_timeout: 60m
      - slack/status:
            include_job_number_field: false
            include_project_field: false
            include_visit_job_action: false
            failure_message: '${SLACK_FAILURE_MESSAGE}'
            success_message: '${SLACK_SUCCESS_MESSAGE}'
  UI Tests:
    # Props to work done by others in this file and in
    # https://github.com/wordpress-mobile/WordPress-iOS/blob/develop/.circleci/config.yml
    # this is a combined rip-off from both
    parameters:
      device:
        description: The device (e.g. "iPhone 12") to use when running tests.
        type: string
      scheme:
        description: Xcode scheme to use to run the tests.
        type: string
    executor:
      name: ios/default
      <<: *xcode_version
    environment:
      FL_OUTPUT_DIR: output
    steps:
      - git/shallow-checkout
      - ios/install-dependencies:
            bundle-install: true
            pod-install: true
      - copy_secrets
      # Start: Swift Package Manager Workaround
      # Ref. https://support.circleci.com/hc/en-us/articles/360044709573-Swift-Package-Manager-fails-to-clone-from-private-Git-repositories
      - run: rm ~/.ssh/id_rsa
      - run: for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts || true
      # END: Swift Package Manager Workaround
      - run:
          name: Fastlane
          command: bundle exec fastlane pick_test_account_and_run_ui_tests scheme:'<< parameters.scheme >>' device:'<< parameters.device >>'
      - store_artifacts:
          path: output/scan/report.html
      - store_artifacts:
          path: output/scan/report.junit
      - store_test_results:
          path: output/scan

workflows:
  simplenote_ios:
    when:
       and:
         - not: << pipeline.parameters.beta_build >>
         - not: << pipeline.parameters.release_build >>
    jobs:
      - Test
      - UI Tests:
          name: UI Tests Subset (iPhone 12)
          device: iPhone 12
          scheme: SimplenoteUITests_Subset
      - Optional Full UI Test:
          type: approval
      - UI Tests:
          name: UI Tests Full (iPhone 12)
          device: iPhone 12
          scheme: SimplenoteUITests
          requires: [ "Optional Full UI Test" ]
  Installable Build:
    when:
       and:
         - not: << pipeline.parameters.beta_build >>
         - not: << pipeline.parameters.release_build >>
    jobs:
      - Hold:
          type: approval
          filters:
            branches:
              ignore: /pull\/[0-9]+/
      - Installable Build:
          requires: [Hold]
          filters:
            branches:
              ignore: /pull\/[0-9]+/
  Release Build:
    when:
       or: [ << pipeline.parameters.beta_build >>, << pipeline.parameters.release_build >> ]
    jobs:
      - Release Build
